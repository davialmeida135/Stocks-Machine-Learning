64
# Define the model
model = Sequential()
model.add(LSTM(units=100, return_sequences=True, input_shape=(train_seq.shape[1], train_seq.shape[2]), 
                kernel_regularizer=tf.keras.regularizers.l2(0.01),
                recurrent_regularizer=tf.keras.regularizers.l2(0.01)))
model.add(Dropout(0.1))
model.add(LSTM(units=100))
model.add(Dense(1))  # Updated to match the number of features

model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mean_absolute_error'])

model.summary()